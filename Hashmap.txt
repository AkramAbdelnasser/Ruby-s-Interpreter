__ENCODING__ keyword
__LINE__ keyword
__FILE__ keyword
BEGIN keyword
END keyword
alias keyword
and keyword
begin keyword
break keyword
case keyword
class keyword
def keyword
defined? keyword
do keyword
else keyword
elsif keyword
end keyword
ensure keyword
for keyword
if keyword
in keyword
module keyword
next keyword
nil keyword
not keyword
or keyword
redo keyword
rescue keyword
retry keyword
return keyword
self keyword
super keyword
then keyword
undef keyword
unless keyword
until keyword
when keyword
while keyword
yield keyword
+ plus
- minus
* multiply
/ divide
# comment
** exponent
== equalsoperator
!= notequalsoperator
< lessthan
> greaterthan
= equals
; semicolon
( lparan
) rparan
{ lbrace
} rbrace
[ lbracket
] rbracket
. dot
, comma
' squote
" dquote
& and
| or
&& logicalAnd
|| logicalOr
true literal
false literal